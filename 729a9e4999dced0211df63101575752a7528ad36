{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "82b4fad9_4b7065e8",
        "filename": "src/libc/stdio/printf.rs",
        "patchSetId": 41
      },
      "lineNbr": 210,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2024-03-03T11:50:16Z",
      "side": 1,
      "message": "Do you think it\u0027s possible to refactor common parts here?\nFor example, have helper methods for \u0027f\u0027 and \u0027g\u0027 cases and reuse them for \u0027e\u0027 as well?",
      "revId": "729a9e4999dced0211df63101575752a7528ad36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a94824_a3b94f05",
        "filename": "src/libc/stdio/printf.rs",
        "patchSetId": 41
      },
      "lineNbr": 210,
      "author": {
        "id": 1021822
      },
      "writtenOn": "2024-03-03T12:53:41Z",
      "side": 1,
      "message": "I\u0027ve tried keeping it that way at first but from my testing, formatting doesn\u0027t work exactly the same in \u0027f\u0027 and \u0027e\u0027 as it does in \u0027g\u0027. In the end keeping separate implementations was easier and made for cleaner code",
      "parentUuid": "82b4fad9_4b7065e8",
      "revId": "729a9e4999dced0211df63101575752a7528ad36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote from a non-uploader is required for the \t              \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "729a9e4999dced0211df63101575752a7528ad36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Someone must have done basic testing of the patch, and \t              it can\u0027t have failed for anyone."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "729a9e4999dced0211df63101575752a7528ad36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}