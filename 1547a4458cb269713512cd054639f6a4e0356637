{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0c12b1a0_6ef32607",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2023-11-03T19:21:54Z",
      "side": 1,
      "message": "For same reasons as described here https://review.gerrithub.io/c/hikari-no-yume/touchHLE/+/1169919/2..8/src/frameworks/foundation/ns_set.rs#b60, this should not be done",
      "revId": "1547a4458cb269713512cd054639f6a4e0356637",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c78b332b_e6cef0ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1022009
      },
      "writtenOn": "2023-11-03T20:52:24Z",
      "side": 1,
      "message": "ok, but why are we doing separate subclasses for NSWhatever and NSMutableWhatever, it seems to create a lot of useless code duplication.",
      "parentUuid": "0c12b1a0_6ef32607",
      "revId": "1547a4458cb269713512cd054639f6a4e0356637",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f34f313_8311222a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2023-11-03T21:11:19Z",
      "side": 1,
      "message": "In general, I agree. But duplication could be avoided by using helper functions.\nOtherwise, maybe we can have a common private superclass between ummutable and mutable ones? Dunno, maybe something to discuss with hikari",
      "parentUuid": "c78b332b_e6cef0ea",
      "revId": "1547a4458cb269713512cd054639f6a4e0356637",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a040ca7c_6062df77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1022009
      },
      "writtenOn": "2023-11-03T21:22:02Z",
      "side": 1,
      "message": "Imo, its easier to not bother, it is rather unlikely that there are applications that send NSMutableWhatever\u0027s methods to a NSWhatever and expect those to fail. And if we want the optimization that a NSWhatever can be cloned with a retain, we can just have a \"mutable\" flag with copy doing a retain or full copy depending on it.",
      "parentUuid": "4f34f313_8311222a",
      "revId": "1547a4458cb269713512cd054639f6a4e0356637",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32dbed2_bd41d38f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2023-11-04T11:04:02Z",
      "side": 1,
      "message": "Technically, this will not be conformant with an Apple implementation as for example NSArray and NSMutableArray are just interfaces. One can provide their own implementation of those.",
      "parentUuid": "a040ca7c_6062df77",
      "revId": "1547a4458cb269713512cd054639f6a4e0356637",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}